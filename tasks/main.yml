---
# tasks file for ansible-role-redcloak/

#- name: "Include OS-specific variables"
#  include_vars: "{{ ansible_os_family }}.yaml"

- name: "Gather the package facts"
  ansible.builtin.package_facts:
    manager: auto
  when: ansible_facts.packages is not defined

#- name: "Install required packages"
#  ansible.builtin.package:
#    name: "{{ item }}"
#    state: present
#  with_items:
#    - unzip
#  when: item|string not in ansible_facts.packages

- name: "Set package_name fact (RedHat)"
  ansible.builtin.set_fact:
    package_name: "{{ package_base_name }}-{{ package_version }}_{{ ansible_architecture }}_{{ datacenter }}.rpm"
  when: ansible_os_family == "RedHat"

- name: "Set package_name fact (Debian)"
  ansible.builtin.set_fact:
    package_name: "{{ package_base_name }}-{{ package_version }}_{{ ansible_architecture }}_{{ datacenter }}.deb"
  when: ansible_os_family == "Debian"

- name: "Create software directory under root homedir, if it does not exist"
  ansible.builtin.file:
    path: "/root/software/{{ package_base_name }}/"
    state: directory
  
- name: "Check if installer package already exist"
  ansible.builtin.stat:
    path: "/root/software/{{ package_base_name }}/{{ package_name }}"
  register: package

- name: "Download installer package from local repository"
  ansible.builtin.get_url:
    url: "{{ software_url }}/{{ package_name }}"
    dest: "/root/software/{{ package_base_name }}/"
    validate_certs: no
    mode: 0777
  when: package.stat.exists != True

#- name: "Install package"
#  ansible.builtin.unarchive:
#    src: "{{ software_url }}/{{ package_name }}"
#    dest: "/root/software/{{ package_base_name }}/"
#    remote_src: yes