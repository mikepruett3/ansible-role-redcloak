---
# Lookup tasks file for ansible-role-redcloak

- name: "Check for SecureWorks Agent install directory"
  ansible.builtin.stat:
    path: /opt/secureworks
  register: result
  ignore_errors: true

- name: "Set Facts for SecureWorks Agent install directory"
  ansible.builtin.set_fact:
    secureworks: /opt/secureworks
  when:
    - result.stat.exists
    - result.stat.isdir
    #- result.failed is false
    - not result.failed | bool

- name: "Set Facts for Install variable"
  ansible.builtin.set_fact:
    install: true
  when:
    - secureworks is not defined

- name: "Check for RedCloak directory, in secureworks"
  ansible.builtin.stat:
    path: "{{ secureworks }}/redcloak"
  register: result
  ignore_errors: true

- name: "Set Facts for SecureWorks Agent install directory (RedCloak)"
  ansible.builtin.set_fact:
    redcloak: "{{ secureworks }}/redcloak"
  when:
    - result.stat.exists
    - result.stat.isdir
    #- result.failed is false
    - not result.failed | bool

- name: "Check for Taegis-Agent directory, in secureworks"
  ansible.builtin.stat:
    path: "{{ secureworks }}/taegis-agent"
  register: result
  ignore_errors: true

- name: "Set Facts for SecureWorks Agent install directory (Taegis)"
  ansible.builtin.set_fact:
    taegis: "{{ secureworks }}/taegis-agent"
  when:
    - result.stat.exists
    - result.stat.isdir
    #- result.failed is false
    - not result.failed | bool

#- name: "Check for Managesoft Configuration INI File"
#  ansible.builtin.stat:
#    path: "{{ managesoft_config_dir }}/etc/config.ini"
#  register: result
#  when:
#    - managesoft_config_dir is defined

#- name: "Set Facts for Managesoft Configuration INI File"
#  ansible.builtin.set_fact:
#    config_file: "{{ managesoft_config_dir }}/etc/config.ini"
#  when:
#    - managesoft_config_dir is defined
#    - result.stat.exists
#    - result.failed is false

- name: "Read Version from existing installed version (RedCloak)"
  ansible.builtin.shell:
    cmd: "./redcloak --check | grep -i 'version:' | head -n 1 | cut -d ':' -f 2"
    chdir: "{{ redcloak }}/bin/"
  register: result
  when:
    - redcloak is defined

- name: "Set Facts for SecureWorks Agent Installed Version (RedCloak)"
  ansible.builtin.set_fact:
    installed_version: "{{ result.stdout | split(' ') | last }}"
  when:
    - redcloak is defined
    - result is defined
    #- result.failed is false
    - not result.failed | bool

- name: "Set Facts for Upgrade variable"
  ansible.builtin.set_fact:
    upgrade: true
  when:
    - installed_version is defined
    - installed_version < package_version
