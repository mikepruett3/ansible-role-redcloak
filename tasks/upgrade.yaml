---
# Upgrade tasks file for ansible-role-redcloak

- name: "Test if upgrade boolean variable is set correctly"
  ansible.builtin.assert:
    that:
      - upgrade is defined
      - upgrade is boolean
    quiet: yes

- name: "Create software directory under root homedir, if it does not exist"
  ansible.builtin.file:
    path: "/root/software/redcloak/"
    state: directory

- name: "Check if installer package already exist"
  ansible.builtin.stat:
    path: "/root/software/redcloak/{{ package_name }}"
  register: package

- name: "Download installer package from local repository"
  ansible.builtin.get_url:
    url: "{{ software_url }}/{{ package_name }}"
    dest: "/root/software/redcloak/"
    validate_certs: no
    mode: '0770'
  when:
    - not package.stat.exists | bool

#- name: "Create a zip archive of $SPLUNK_HOME/etc/system/default"
#  community.general.archive:
#    path: "{{ splunk_home }}/etc/system/default/"
#    dest: /tmp/splunk-default-config-backup.zip
#    format: zip

#- name: "Create a zip archive of $SPLUNK_HOME/etc/system/local"
#  community.general.archive:
#    path: "{{ splunk_home }}/etc/system/local/"
#    dest: /tmp/splunk-local-config-backup.zip
#    format: zip

- name: "Stop the SecureWorks Agent Service"
  ansible.builtin.service:
    name: "{{ secureworks_service }}"
    state: stopped

- name: "Install package (RHEL - yum)"
  ansible.builtin.yum:
    name: "/root/software/redcloak/{{ package_name }}"
    state: present
  when:
    - ansible_facts['os_family'] == 'RedHat'
    - ansible_facts['distribution_major_version'] <= '7'

- name: "Install package (RHEL - dnf)"
  ansible.builtin.dnf:
    name: "/root/software/redcloak/{{ package_name }}"
    state: present
    disable_gpg_check: yes
  when:
    - ansible_facts['os_family'] == 'RedHat'
    - ansible_facts['distribution_major_version'] >= '8'

- name: "Install package (Debian)"
  ansible.builtin.apt:
    deb: "/root/software/redcloak/{{ package_name }}"
    state: present
  when:
    - ansible_facts['os_family'] == 'Debian'

- name: "Start the SecureWorks Agent Service"
  ansible.builtin.service:
    name: "{{ secureworks_service }}"
    state: restarted